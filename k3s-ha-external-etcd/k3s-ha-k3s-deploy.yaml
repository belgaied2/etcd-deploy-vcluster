apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: vcluster
    release: k3s-ha
  name: k3s-ha
  namespace: vcluster-k3s-ha
spec:
  progressDeadlineSeconds: 600
  replicas: 3
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app: vcluster
      release: k3s-ha
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: vcluster
        release: k3s-ha
    spec:
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vcluster
                - key: release
                  operator: In
                  values:
                  - k3s-ha
              topologyKey: kubernetes.io/hostname
            weight: 100
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - vcluster
                - key: release
                  operator: In
                  values:
                  - k3s-ha
              topologyKey: topology.kubernetes.io/zone
            weight: 50
      containers:
      - args:
        - -c
        - /bin/k3s server --write-kubeconfig=/data/k3s-config/kube-config.yaml --data-dir=/data
          --disable=traefik,servicelb,metrics-server,local-storage,coredns --disable-network-policy
          --disable-agent --egress-selector-mode=pod --disable-cloud-controller --flannel-backend=none --disable-scheduler
          --kube-controller-manager-arg=controllers=*,-nodeipam,-nodelifecycle,-persistentvolume-binder,-attachdetach,-persistentvolume-expander,-cloud-node-lifecycle,-ttl
          --kube-apiserver-arg=endpoint-reconciler-type=none --service-cidr=10.43.0.0/16 --debug
          && true
        command:
        - /bin/sh
        env:
        - name: K3S_DATASTORE_ENDPOINT
          value: https://k3s-ha-etcd-0.k3s-ha-etcd-headless.vcluster-k3s-ha:2379,https://k3s-ha-etcd-1.k3s-ha-etcd-headless.vcluster-k3s-ha:2379,https://k3s-ha-etcd-2.k3s-ha-etcd-headless.vcluster-k3s-ha:2379
        - name: K3S_DATASTORE_CAFILE
          value: /etc/rancher/pki/etcd-ca.crt
        - name: K3S_DATASTORE_CERTFILE
          value: /etc/rancher/pki/etcd-server.crt
        - name: K3S_DATASTORE_KEYFILE
          value: /etc/rancher/pki/etcd-server.key
        - name: K3S_TOKEN
          valueFrom:
            secretKeyRef:
              key: server-token
              name: k3s-ha-tokens
        image: rancher/k3s:v1.25.10-k3s1
        imagePullPolicy: IfNotPresent
        name: vcluster
        resources:
          limits:
            memory: 2Gi
          requests:
            cpu: 200m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /etc/rancher
          name: config
        - mountPath: /data
          name: data
        - mountPath: /etc/rancher/pki
          name: pki
      - args:
        - --name=k3s-ha
        - --service-account=vc-workload-k3s-ha
        - --kube-config-context-name=my-vcluster
        - --leader-elect=true
        - --sync=-ingressclasses
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: status.podIP
        - name: CONFIG
          value: '---'
        - name: VCLUSTER_TELEMETRY_CONFIG
          value: '{"disabled":"false","instanceCreator":"vclusterctl","instanceCreatorUID":"514a6661ac0b1421f0810a7e4273bf5f1e5518c238bb5a89848e3cbba51c8066"}'
        image: ghcr.io/loft-sh/vcluster:0.15.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 60
          httpGet:
            path: /healthz
            port: 8443
            scheme: HTTPS
          initialDelaySeconds: 60
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        name: syncer
        readinessProbe:
          failureThreshold: 60
          httpGet:
            path: /readyz
            port: 8443
            scheme: HTTPS
          periodSeconds: 2
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            cpu: "1"
            memory: 512Mi
          requests:
            cpu: 20m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /manifests/coredns
          name: coredns
          readOnly: true
        - mountPath: /data
          name: data
          readOnly: true
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      serviceAccount: vc-k3s-ha
      serviceAccountName: vc-k3s-ha
      terminationGracePeriodSeconds: 10
      volumes:
      - emptyDir: {}
        name: config
      - configMap:
          defaultMode: 420
          name: k3s-ha-coredns
        name: coredns
      - emptyDir: {}
        name: data
      - name: pki
        secret:
          defaultMode: 420
          secretName: k3s-ha-certs